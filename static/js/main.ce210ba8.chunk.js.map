{"version":3,"sources":["OltCliGenerator.js","App.js","reportWebVitals.js","index.js"],"names":["OltCliGenerator","slot","setSlot","useState","pon","setPon","onu","setOnu","sn","setSn","namaPelanggan","setNamaPelanggan","username","setUsername","password","setPassword","output","setOutput","React","createElement","type","value","onChange","e","target","onClick","generateCliScript","vlan","s1px","onuId","middle","readOnly","rows","cols","copyToClipboard","navigator","clipboard","writeText","then","alert","catch","err","console","error","textarea","document","body","appendChild","select","execCommand","removeChild","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ce210ba8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst OltCliGenerator = () => {\r\n  const [slot, setSlot] = useState(\"\");\r\n  const [pon, setPon] = useState(\"\");\r\n  const [onu, setOnu] = useState(\"\");\r\n  const [sn, setSn] = useState(\"\");\r\n  const [namaPelanggan, setNamaPelanggan] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [output, setOutput] = useState(\"\");\r\n\r\nconst generateCliScript = () => {\r\n  const vlan = pon < 10 ? `1${slot}0${pon}` : `1${slot}${pon}`;  // Menambahkan '0' untuk PON 1 sampai 9\r\n// const vlan = `${slot}20${pon}`;\r\n  const s1px = `S${slot}-P${pon}`;\r\n  const onuId = `${onu}`;\r\n\r\n  // Di sini kita memastikan angka tengah sesuai dengan slot yang dipilih\r\n  const middle = slot === 1 ? 1 : slot;  // Jika slot 1, gunakan '1', jika tidak gunakan angka slot sebagai angka tengah\r\n  \r\n  const script = `\r\ninterface gpon-olt_1/${middle}/${pon}\r\nonu ${onuId} type ZXHN-F609 sn ${sn}\r\nexit\r\ninterface gpon-onu_1/${middle}/${pon}:${onuId}\r\nname ${namaPelanggan}\r\ntcont 1 profile HOME-PPPOE\r\ngemport 1 tcont 1\r\ngemport 1 traffic-limit downstream HOME-PPPOE\r\nservice-port 1 vport 1 user-vlan ${vlan} vlan ${vlan}\r\nexit\r\npon-onu-mng gpon-onu_1/${middle}/${pon}:${onuId}\r\nservice ${s1px} gemport 1 vlan ${vlan}\r\nwan-ip 1 mode pppoe username ${username} password ${password} vlan-profile ${s1px} host 1\r\nsecurity-mgmt 212 state enable mode forward protocol web https\r\ninterface eth eth_0/1 state lock\r\ninterface eth eth_0/2 state lock\r\ninterface eth eth_0/3 state lock\r\ninterface eth eth_0/4 state lock\r\n  `;\r\n  setOutput(script);\r\n};\r\n\r\n// const copyToClipboard = () => {\r\n//     if (navigator.clipboard && navigator.clipboard.writeText) {\r\n//       navigator.clipboard.writeText(output).then(() => {\r\n//         alert(\"Script berhasil disalin!\");\r\n//       }).catch(err => {\r\n//         console.error(\"Clipboard error:\", err);\r\n//         alert(\"Gagal menyalin ke clipboard.\");\r\n//       });\r\n//     } else {\r\n//       alert(\"Clipboard tidak didukung di browser ini.\");\r\n//     }\r\n//   };\r\nconst copyToClipboard = () => {\r\n    if (navigator.clipboard && navigator.clipboard.writeText) {\r\n      navigator.clipboard.writeText(output).then(() => {\r\n        alert(\"Script berhasil disalin!\");\r\n      }).catch(err => {\r\n        console.error(\"Clipboard error:\", err);\r\n        alert(\"Gagal menyalin ke clipboard.\");\r\n      });\r\n    } else {\r\n      // Fallback jika clipboard API tidak didukung atau HTTP\r\n      const textarea = document.createElement(\"textarea\");\r\n      textarea.value = output;\r\n      document.body.appendChild(textarea);\r\n      textarea.select();\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(textarea);\r\n      alert(\"Script berhasil disalin!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>OLT CLI Generator</h1>\r\n      <div>\r\n        <label>Slot:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={slot}\r\n          onChange={(e) => setSlot(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>PON:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={pon}\r\n          onChange={(e) => setPon(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>ONU:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={onu}\r\n          onChange={(e) => setOnu(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Serial Number (SN):</label>\r\n        <input\r\n          type=\"text\"\r\n          value={sn}\r\n          onChange={(e) => setSn(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Nama Pelanggan:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={namaPelanggan}\r\n          onChange={(e) => setNamaPelanggan(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Username PPPoE:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Password PPPoE:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </div>\r\n      <button onClick={generateCliScript}>Submit</button>\r\n\r\n      {output && (\r\n        <div>\r\n          <h2>Generated CLI Script</h2>\r\n          <textarea value={output} readOnly rows=\"10\" cols=\"80\" />\r\n          <br />\r\n          <button onClick={copyToClipboard}>Copy</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OltCliGenerator;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport OltCliGenerator from \"./OltCliGenerator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OltCliGenerator />\n      {/* <div className=\"App-header\">\n      </div> */}\n    </div>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}